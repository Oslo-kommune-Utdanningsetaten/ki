# Generated by Django 4.2.20 on 2025-06-03 10:47

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('ki', '0018_alter_school_options_and_more'),
    ]


    change_role_foreign_key = """
                UPDATE role JOIN school ON role.school = school.org_nr 
                SET role.school_temporary = school.id 
                WHERE role.school IS NOT NULL;
    """

    change_school_access_foreign_key = """
                UPDATE school_access JOIN school ON school_access.school_id = school.org_nr 
                SET school_access.school_temporary = school.id 
                WHERE school_access.school_id IS NOT NULL;
    """

    change_bot_access_foreign_key = """
                UPDATE bot_access JOIN school ON bot_access.school_id = school.org_nr 
                SET bot_access.school_temporary = school.id 
                WHERE bot_access.school_id IS NOT NULL;
    """

    operations = [

        # Setting
        migrations.AddField(
            model_name='setting',
            name='id',
            field=models.AutoField(primary_key=True),
        ),

        # Bot
        migrations.RenameField(
            model_name='bot',
            old_name='uuid',
            new_name='id',
        ),
        migrations.RenameField(
            model_name='bot',
            old_name='model_id',
            new_name='model',
        ),
        migrations.RenameField(
            model_name='bot',
            old_name='prompt_visibility',
            new_name='is_prompt_visible',
        ),
        migrations.RenameField(
            model_name='bot',
            old_name='library',
            new_name='is_library_bot',
        ),
        migrations.RenameField(
            model_name='bot',
            old_name='allow_distribution',
            new_name='is_distribution_allowed',
        ),
        migrations.RenameField(
            model_name='bot',
            old_name='mandatory',
            new_name='is_mandatory',
        ),
        migrations.RenameField(
            model_name='bot',
            old_name='img_bot',
            new_name='is_img_bot',
        ),

        # BotModel
        migrations.RenameField(
            model_name='botmodel',
            old_name='model_id',
            new_name='id',
        ),
        migrations.RenameField(
            model_name='botmodel',
            old_name='deployment_id',
            new_name='deployment_key',
        ),

        # Favorite
        migrations.RenameField(
            model_name='favorite',
            old_name='bot_id',
            new_name='bot',
        ),
        migrations.RenameField(
            model_name='favorite',
            old_name='user_id',
            new_name='feide_user',
        ),


        # PromptChoice
        migrations.RenameField(
            model_name='promptchoice',
            old_name='bot_id',
            new_name='bot',
        ),

        # ChoiceOption
        migrations.RenameField(
            model_name='choiceoption',
            old_name='choice_id',
            new_name='choice',
        ),

        # School
        migrations.AddField(
            model_name='school',
            name='id',
            field=models.AutoField(primary_key=True, serialize=False),
            preserve_default=False,
        ),
        migrations.RenameField(
            model_name='school',
            old_name='school_name',
            new_name='name',
        ),
        migrations.RenameField(
            model_name='school',
            old_name='school_code',
            new_name='code',
        ),

        # BotLevel
        migrations.RenameField(
            model_name='botlevel',
            old_name='level_id',
            new_name='id',
        ),
        migrations.RenameField(
            model_name='botlevel',
            old_name='access_id',
            new_name='bot_access',
        ),

        # PageText
        migrations.RenameField(
            model_name='pagetext',
            old_name='page_id',
            new_name='id',
        ),
        migrations.RenameField(
            model_name='pagetext',
            old_name='page_title',
            new_name='title',
        ),
        migrations.RenameField(
            model_name='pagetext',
            old_name='page_text',
            new_name='text',
        ),
        migrations.RenameField(
            model_name='pagetext',
            old_name='public',
            new_name='is_public',
        ),

        # Role
        migrations.RenameField(
            model_name='role',
            old_name='user_id',
            new_name='feide_user',
        ),
        migrations.AddField(
            model_name='role',
            name='id',
            field=models.AutoField(primary_key=True),
        ),
        migrations.AddField(
            # Add a temporary field to hold the new foreign key
            model_name='role',
            name='school_temporary',
            field=models.IntegerField(null=True, blank=True),
        ),
        # Update the temporary field with the new foreign key values
        migrations.RunSQL(change_role_foreign_key, migrations.RunSQL.noop),


        # SchoolAccess
        migrations.RenameField(
            model_name='schoolaccess',
            old_name='access_id',
            new_name='id',
        ),
        migrations.AddField(
            # Add a temporary field to hold the new foreign key
            model_name='schoolaccess',
            name='school_temporary',
            field=models.IntegerField(null=True, blank=True),
        ),
        # Update the temporary field with the new foreign key values
        migrations.RunSQL(change_school_access_foreign_key, migrations.RunSQL.noop),

        # BotAccess
        migrations.RenameField(
            model_name='botaccess',
            old_name='access_id',
            new_name='id',
        ),
        migrations.RenameField(
            model_name='botaccess',
            old_name='bot_id',
            new_name='bot',
        ),
        migrations.AddField(
            # Add a temporary field to hold the new foreign key
            model_name='botaccess',
            name='school_temporary',
            field=models.IntegerField(null=True, blank=True),
        ),
        # Update the temporary field with the new foreign key values
        migrations.RunSQL(change_bot_access_foreign_key, migrations.RunSQL.noop),

        # Subject_access
        migrations.RenameField(
            model_name='subjectaccess',
            old_name='bot_id',
            new_name='bot',
        ),

        # LogSchool
        migrations.RenameField(
            model_name='logschool',
            old_name='log_id',
            new_name='use_log',
        ),
        migrations.RenameField(
            model_name='logschool',
            old_name='school_id',
            new_name='school_org_nr',
        ),


        # TagCategory
        migrations.RenameField(
            model_name='tagcategory',
            old_name='category_id',
            new_name='id',
        ),
        migrations.RenameField(
            model_name='tagcategory',
            old_name='category_name',
            new_name='name',
        ),
        migrations.RenameField(
            model_name='tagcategory',
            old_name='category_order',
            new_name='order',
        ),

        # TagLabel
        migrations.RenameField(
            model_name='taglabel',
            old_name='tag_label_id',
            new_name='id',
        ),
        migrations.RenameField(
            model_name='taglabel',
            old_name='tag_label_name',
            new_name='name',
        ),
        migrations.RenameField(
            model_name='taglabel',
            old_name='tag_label_weight',
            new_name='weight',
        ),
        migrations.RenameField(
            model_name='taglabel',
            old_name='tag_label_order',
            new_name='order',
        ),

        # Tag
        migrations.RenameField(
            model_name='tag',
            old_name='tag_id',
            new_name='id',
        ),
        migrations.RenameField(
            model_name='tag',
            old_name='tag_value',
            new_name='value',
        ),

    ]