# Generated by Django 4.2.16 on 2024-09-16 11:02

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bot',
            fields=[
                ('uuid', models.CharField(default=uuid.uuid4, max_length=36, primary_key=True, serialize=False)),
                ('bot_nr', models.IntegerField(null=True)),
                ('title', models.CharField(max_length=40, null=True)),
                ('ingress', models.TextField(null=True)),
                ('prompt', models.TextField(null=True)),
                ('model', models.CharField(max_length=20, null=True)),
                ('temperature', models.DecimalField(decimal_places=1, default=1.0, max_digits=2)),
                ('image', models.CharField(max_length=20, null=True)),
                ('prompt_visibility', models.BooleanField(default=True)),
                ('library', models.BooleanField(default=False)),
                ('owner', models.CharField(max_length=50, null=True)),
                ('allow_distribution', models.BooleanField(default=False)),
                ('mandatory', models.BooleanField(default=False)),
                ('bot_info', models.TextField(null=True)),
                ('tag_cat_1', models.IntegerField(default=0)),
                ('tag_cat_2', models.IntegerField(default=0)),
                ('tag_cat_3', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'bot',
            },
        ),
        migrations.CreateModel(
            name='BotAccess',
            fields=[
                ('access_id', models.AutoField(primary_key=True, serialize=False)),
                ('bot_nr', models.IntegerField(null=True)),
                ('level', models.CharField(max_length=20, null=True)),
                ('access', models.CharField(choices=[('none', 'None'), ('emp', 'Emp'), ('all', 'All'), ('levels', 'Levels')], default='none', max_length=10, null=True)),
                ('bot_id', models.ForeignKey(db_column='bot_id', on_delete=django.db.models.deletion.CASCADE, related_name='accesses', to='ki.bot')),
            ],
            options={
                'db_table': 'bot_access',
            },
        ),
        migrations.CreateModel(
            name='PageText',
            fields=[
                ('page_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('page_title', models.CharField(max_length=50)),
                ('page_text', models.TextField(null=True)),
                ('public', models.BooleanField()),
            ],
            options={
                'db_table': 'page_text',
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('org_nr', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('school_name', models.CharField(default='', max_length=50, null=True)),
                ('school_code', models.CharField(max_length=3, null=True)),
                ('access', models.CharField(choices=[('none', 'None'), ('emp', 'Emp'), ('all', 'All'), ('levels', 'Levels')], default='none', max_length=10)),
            ],
            options={
                'db_table': 'school',
                'ordering': ['school_name'],
            },
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('setting_key', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=50)),
                ('int_val', models.IntegerField(null=True)),
                ('txt_val', models.CharField(max_length=250, null=True)),
                ('is_txt', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'setting',
            },
        ),
        migrations.CreateModel(
            name='SchoolAccess',
            fields=[
                ('access_id', models.AutoField(primary_key=True, serialize=False)),
                ('level', models.CharField(max_length=20)),
                ('school_id', models.ForeignKey(db_column='school_id', on_delete=django.db.models.deletion.CASCADE, related_name='school_accesses', to='ki.school')),
            ],
            options={
                'db_table': 'school_access',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('user_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('author', 'Author'), ('emp', 'Emp')], default='emp', max_length=10)),
                ('school', models.ForeignKey(db_column='school', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='ki.school')),
            ],
            options={
                'db_table': 'role',
            },
        ),
        migrations.CreateModel(
            name='PromptChoice',
            fields=[
                ('id', models.CharField(max_length=7, primary_key=True, serialize=False)),
                ('bot_nr', models.IntegerField(null=True)),
                ('label', models.CharField(max_length=50)),
                ('order', models.IntegerField()),
                ('text', models.TextField(null=True)),
                ('bot_id', models.ForeignKey(db_column='bot_id', on_delete=django.db.models.deletion.CASCADE, related_name='prompt_choices', to='ki.bot')),
            ],
            options={
                'db_table': 'prompt_choice',
            },
        ),
        migrations.CreateModel(
            name='ChoiceOption',
            fields=[
                ('id', models.CharField(max_length=7, primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=50)),
                ('text', models.TextField(default='')),
                ('order', models.IntegerField()),
                ('is_default', models.BooleanField(default=False)),
                ('choice_id', models.ForeignKey(db_column='choice_id', on_delete=django.db.models.deletion.CASCADE, related_name='options', to='ki.promptchoice')),
            ],
            options={
                'db_table': 'choice_option',
            },
        ),
        migrations.CreateModel(
            name='BotLevel',
            fields=[
                ('level_id', models.AutoField(primary_key=True, serialize=False)),
                ('level', models.CharField(default='', max_length=20)),
                ('access_id', models.ForeignKey(db_column='access_id', on_delete=django.db.models.deletion.CASCADE, related_name='levels', to='ki.botaccess')),
            ],
            options={
                'db_table': 'bot_level',
            },
        ),
        migrations.AddField(
            model_name='botaccess',
            name='school_id',
            field=models.ForeignKey(db_column='school_id', on_delete=django.db.models.deletion.CASCADE, related_name='accesses', to='ki.school'),
        ),
        migrations.CreateModel(
            name='SubjectAccess',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('bot_nr', models.IntegerField(null=True)),
                ('subject_id', models.CharField(max_length=200, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('bot_id', models.ForeignKey(db_column='bot_id', on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='ki.bot')),
            ],
            options={
                'db_table': 'subject_access',
                'unique_together': {('bot_id', 'subject_id')},
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('bot_nr', models.IntegerField(null=True)),
                ('user_id', models.CharField(max_length=50)),
                ('bot_id', models.ForeignKey(db_column='bot_id', on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to='ki.bot')),
            ],
            options={
                'db_table': 'favorite',
                'unique_together': {('bot_id', 'user_id')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='botaccess',
            unique_together={('bot_id', 'school_id')},
        ),
    ]
